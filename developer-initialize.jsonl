{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "Joke generator"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Joke Generator</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <div class=\"container\">\n        <h1>Joke Generator</h1>\n        <p id=\"joke\">Click the button to get a joke.</p>\n        <button onclick=\"generateJoke()\">Generate Joke</button>\n    </div>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    font-family: Arial, sans-serif;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #f3f4f6;\n}\n\n.container {\n    text-align: center;\n    padding: 20px;\n    border: 1px solid #d3d4d5;\n    border-radius: 10px;\n    background-color: #fff;\n}\n\nbutton {\n    margin-top: 20px;\n    padding: 10px 20px;\n    font-size: 16px;\n    cursor: pointer;\n    border: none;\n    background-color: #4CAF50;\n    color: #fff;\n    border-radius: 5px;\n    transition: background-color 0.3s;\n}\n\nbutton:hover {\n    background-color: #45a049;\n}\n```\n\n[script.js]\n```javascript\nconst jokeElement = document.getElementById('joke');\n\nfunction generateJoke() {\n    fetch('https://api.jokeapi.dev/joke/any')\n        .then(response => response.json())\n        .then(data => {\n            if (data.type === 'single') {\n                jokeElement.textContent = data.joke;\n            } else {\n                jokeElement.textContent = data.setup + ' ' + data.delivery;\n            }\n        });\n}\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "A template restaurant website"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Delicious Eats Restaurant</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <header>\n        <h1>Delicious Eats</h1>\n        <nav>\n            <a href=\"#home\">Home</a>\n            <a href=\"#menu\">Menu</a>\n            <a href=\"#about\">About Us</a>\n            <a href=\"#contact\">Contact</a>\n        </nav>\n    </header>\n    <section id=\"home\">\n        <h2>Welcome to Delicious Eats</h2>\n        <p>Experience the best culinary delights in the city.</p>\n    </section>\n    <section id=\"menu\">\n        <h2>Menu</h2>\n        <ul>\n            <li>Spaghetti Carbonara - $12</li>\n            <li>Classic Burger - $10</li>\n            <li>Caesar Salad - $8</li>\n            <li>Chocolate Mousse - $6</li>\n        </ul>\n    </section>\n    <section id=\"about\">\n        <h2>About Us</h2>\n        <p>We have been serving delectable dishes since 1990.</p>\n    </section>\n    <section id=\"contact\">\n        <h2>Contact Us</h2>\n        <p>Email: delicious@eats.com</p>\n        <p>Phone: (123) 456-7890</p>\n    </section>\n    <footer>\n        <p>&copy; 2023 Delicious Eats</p>\n    </footer>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #f5f5f5;\n}\n\nheader {\n    background-color: #333;\n    color: #fff;\n    padding: 10px 0;\n    text-align: center;\n}\n\nheader h1 {\n    margin: 0;\n}\n\nnav a {\n    margin: 0 15px;\n    color: #fff;\n    text-decoration: none;\n}\n\nsection {\n    padding: 20px;\n    background-color: #fff;\n    margin: 20px auto;\n    width: 80%;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n}\n\nfooter {\n    background-color: #333;\n    color: #fff;\n    text-align: center;\n    padding: 10px 0;\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n}\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "A sudoku game"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Sudoku Game</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <table id=\"sudokuTable\"></table>\n    <button onclick=\"solveSudoku()\">Solve</button>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #f4f4f4;\n}\n\ntable {\n    border-collapse: collapse;\n}\n\ntd {\n    width: 40px;\n    height: 40px;\n    border: 1px solid black;\n    text-align: center;\n    font-size: 20px;\n}\n\nbutton {\n    margin-top: 20px;\n}\n```\n\n[script.js]\n```javascript\nconst SIZE = 9;\nconst sudokuTable = document.getElementById('sudokuTable');\n\n// Initialize empty board\nlet board = Array(SIZE).fill(0).map(row => Array(SIZE).fill(0));\n\nfunction renderBoard() {\n    sudokuTable.innerHTML = '';\n    for (let i = 0; i < SIZE; i++) {\n        const row = document.createElement('tr');\n        for (let j = 0; j < SIZE; j++) {\n            const cell = document.createElement('td');\n            if (board[i][j] !== 0) {\n                cell.textContent = board[i][j];\n            }\n            row.appendChild(cell);\n        }\n        sudokuTable.appendChild(row);\n    }\n}\n\nfunction isSafeToPlaceNumber(x, y, num) {\n    for (let i = 0; i < SIZE; i++) {\n        if (board[x][i] === num || board[i][y] === num) {\n            return false;\n        }\n    }\n    const startRow = x - x % 3, startCol = y - y % 3;\n    for (let i = 0; i < 3; i++) {\n        for (let j = 0; j < 3; j++) {\n            if (board[i + startRow][j + startCol] === num) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nfunction solveSudokuUtil(x, y) {\n    if (x === SIZE - 1 && y === SIZE) {\n        renderBoard();\n        return true;\n    }\n    if (y === SIZE) {\n        x++;\n        y = 0;\n    }\n    if (board[x][y] > 0) {\n        return solveSudokuUtil(x, y + 1);\n    }\n    for (let num = 1; num <= SIZE; num++) {\n        if (isSafeToPlaceNumber(x, y, num)) {\n            board[x][y] = num;\n            if (solveSudokuUtil(x, y + 1)) {\n                return true;\n            }\n            board[x][y] = 0;\n        }\n    }\n    return false;\n}\n\nfunction solveSudoku() {\n    solveSudokuUtil(0, 0);\n}\n\nrenderBoard();\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "An HTML color picker"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>HTML Color Picker</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <input type=\"color\" id=\"colorPicker\">\n    <div id=\"colorDisplay\"></div>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    font-family: Arial, sans-serif;\n}\n\n#colorPicker {\n    margin-right: 20px;\n}\n\n#colorDisplay {\n    width: 100px;\n    height: 100px;\n    border: 1px solid #000;\n}\n```\n\n[script.js]\n```javascript\nconst colorPicker = document.getElementById('colorPicker');\nconst colorDisplay = document.getElementById('colorDisplay');\n\ncolorPicker.addEventListener('input', (event) => {\n    const chosenColor = event.target.value;\n    colorDisplay.style.backgroundColor = chosenColor;\n});\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "breakout game"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Breakout Game</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <canvas id=\"gameCanvas\" width=\"480\" height=\"320\"></canvas>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #333;\n}\n\ncanvas {\n    border: 1px solid #fff;\n}\n```\n\n[script.js]\n```javascript\nconst canvas = document.getElementById('gameCanvas');\nconst ctx = canvas.getContext('2d');\n\nlet ballRadius = 10;\nlet x = canvas.width / 2;\nlet y = canvas.height - 30;\nlet dx = 2;\nlet dy = -2;\nlet paddleHeight = 10;\nlet paddleWidth = 75;\nlet paddleX = (canvas.width - paddleWidth) / 2;\nlet rightPressed = false;\nlet leftPressed = false;\n\ndocument.addEventListener(\"keydown\", keyDownHandler);\ndocument.addEventListener(\"keyup\", keyUpHandler);\n\nfunction keyDownHandler(e) {\n    if(e.key == \"Right\" || e.key == \"ArrowRight\") {\n        rightPressed = true;\n    } else if(e.key == \"Left\" || e.key == \"ArrowLeft\") {\n        leftPressed = true;\n    }\n}\n\nfunction keyUpHandler(e) {\n    if(e.key == \"Right\" || e.key == \"ArrowRight\") {\n        rightPressed = false;\n    } else if(e.key == \"Left\" || e.key == \"ArrowLeft\") {\n        leftPressed = false;\n    }\n}\n\nfunction drawBall() {\n    ctx.beginPath();\n    ctx.arc(x, y, ballRadius, 0, Math.PI*2);\n    ctx.fillStyle = \"#0095DD\";\n    ctx.fill();\n    ctx.closePath();\n}\n\nfunction drawPaddle() {\n    ctx.beginPath();\n    ctx.rect(paddleX, canvas.height - paddleHeight, paddleWidth, paddleHeight);\n    ctx.fillStyle = \"#0095DD\";\n    ctx.fill();\n    ctx.closePath();\n}\n\nfunction draw() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    drawBall();\n    drawPaddle();\n\n    if(x + dx > canvas.width - ballRadius || x + dx < ballRadius) {\n        dx = -dx;\n    }\n\n    if(y + dy < ballRadius) {\n        dy = -dy;\n    } else if(y + dy > canvas.height - ballRadius) {\n        if(x > paddleX && x < paddleX + paddleWidth) {\n            dy = -dy;\n        } else {\n            document.location.reload();\n        }\n    }\n\n    if(rightPressed && paddleX < canvas.width - paddleWidth) {\n        paddleX += 7;\n    } else if(leftPressed && paddleX > 0) {\n        paddleX -= 7;\n    }\n\n    x += dx;\n    y += dy;\n    requestAnimationFrame(draw);\n}\n\ndraw();\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "Landing page template"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Landing Page Template</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <header>\n        <nav>\n            <div class=\"logo\">BrandName</div>\n            <ul class=\"nav-list\">\n                <li><a href=\"#\">Home</a></li>\n                <li><a href=\"#\">Features</a></li>\n                <li><a href=\"#\">About</a></li>\n                <li><a href=\"#\">Contact</a></li>\n            </ul>\n        </nav>\n    </header>\n    <main>\n        <section class=\"hero\">\n            <h1>Welcome to BrandName</h1>\n            <p>Discover our amazing features and benefits.</p>\n            <button>Learn More</button>\n        </section>\n        <section class=\"features\">\n            <!-- Additional content goes here -->\n        </section>\n    </main>\n    <footer>\n        <p>&copy; 2023 BrandName. All rights reserved.</p>\n    </footer>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\nheader {\n    background-color: #333;\n    color: #fff;\n    padding: 15px 0;\n}\n\n.logo {\n    font-size: 24px;\n    margin-left: 20px;\n    float: left;\n}\n\n.nav-list {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    float: right;\n    margin-right: 20px;\n}\n\n.nav-list li {\n    display: inline;\n    margin-left: 15px;\n}\n\n.nav-list a {\n    color: #fff;\n    text-decoration: none;\n}\n\n.hero {\n    text-align: center;\n    padding: 100px 0;\n}\n\nbutton {\n    padding: 10px 20px;\n    border: none;\n    background-color: #333;\n    color: #fff;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\nbutton:hover {\n    background-color: #555;\n}\n\nfooter {\n    background-color: #f3f3f3;\n    text-align: center;\n    padding: 20px 0;\n}\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "2048 game"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>2048 Game</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <div id=\"grid\"></div>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    font-family: Arial, sans-serif;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #faf8ef;\n}\n\n#grid {\n    width: 400px;\n    height: 400px;\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    gap: 10px;\n}\n\n.tile {\n    width: 100%;\n    height: 100%;\n    background-color: #cdc0b4;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 32px;\n}\n```\n\n[script.js]\n```javascript\nconst grid = document.getElementById(\"grid\");\nconst size = 4;\nlet tiles = [];\nfor (let i = 0; i < size; i++) {\n    tiles[i] = Array(size).fill(0);\n}\n\nfunction drawTiles() {\n    grid.innerHTML = '';\n    for (let i = 0; i < size; i++) {\n        for (let j = 0; j < size; j++) {\n            const tile = document.createElement(\"div\");\n            tile.classList.add(\"tile\");\n            if (tiles[i][j] !== 0) {\n                tile.textContent = tiles[i][j];\n            }\n            grid.appendChild(tile);\n        }\n    }\n}\n\nfunction addRandomTile() {\n    let emptyPositions = [];\n    for (let i = 0; i < size; i++) {\n        for (let j = 0; j < size; j++) {\n            if (tiles[i][j] === 0) {\n                emptyPositions.push({ x: i, y: j });\n            }\n        }\n    }\n    if (emptyPositions.length > 0) {\n        const position = emptyPositions[Math.floor(Math.random() * emptyPositions.length)];\n        tiles[position.x][position.y] = Math.random() > 0.5 ? 2 : 4;\n    }\n}\n\nfunction slide(row) {\n    const arr = row.filter(val => val);\n    const missing = size - arr.length;\n    const zeros = Array(missing).fill(0);\n    return zeros.concat(arr);\n}\n\nfunction merge(row) {\n    for (let i = size - 1; i > 0; i--) {\n        if (row[i] === row[i - 1]) {\n            row[i] *= 2;\n            row[i - 1] = 0;\n        }\n    }\n    return row;\n}\n\nfunction flip(grid) {\n    for (let i = 0; i < size; i++) {\n        grid[i].reverse();\n    }\n}\n\nfunction rotate(grid) {\n    const newGrid = [];\n    for (let i = 0; i < size; i++) {\n        newGrid[i] = [];\n        for (let j = 0; j < size; j++) {\n            newGrid[i][j] = grid[j][i];\n        }\n    }\n    return newGrid;\n}\n\nfunction move(direction) {\n    let moved = false;\n    for (let i = 0; i < size; i++) {\n        if (direction === \"right\") {\n            tiles[i] = slide(tiles[i]);\n            tiles[i] = merge(tiles[i]);\n            tiles[i] = slide(tiles[i]);\n        } else if (direction === \"left\") {\n            flip(tiles);\n            tiles[i] = slide(tiles[i]);\n            tiles[i] = merge(tiles[i]);\n            tiles[i] = slide(tiles[i]);\n            flip(tiles);\n        } else if (direction === \"down\") {\n            tiles = rotate(tiles);\n            tiles[i] = slide(tiles[i]);\n            tiles[i] = merge(tiles[i]);\n            tiles[i] = slide(tiles[i]);\n            tiles = rotate(tiles);\n            tiles = rotate(tiles);\n            tiles = rotate(tiles);\n        } else if (direction === \"up\") {\n            tiles = rotate(tiles);\n            flip(tiles);\n            tiles[i] = slide(tiles[i]);\n            tiles[i] = merge(tiles[i]);\n            tiles[i] = slide(tiles[i]);\n            flip(tiles);\n            tiles = rotate(tiles);\n            tiles = rotate(tiles);\n            tiles = rotate(tiles);\n        }\n    }\n    drawTiles();\n    addRandomTile();\n    drawTiles();\n}\n\ndocument.addEventListener('keyup', function(e) {\n    if (e.key === \"ArrowUp\") {\n        move(\"up\");\n    } else if (e.key === \"ArrowRight\") {\n        move(\"right\");\n    } else if (e.key === \"ArrowDown\") {\n        move(\"down\");\n    } else if (e.key === \"ArrowLeft\") {\n        move(\"left\");\n    }\n});\n\ndrawTiles();\naddRandomTile();\ndrawTiles();\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "A bbc website clone"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>News Website</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <header>\n        <div id=\"logo\">NEWS</div>\n        <nav>\n            <ul>\n                <li>Home</li>\n                <li>World</li>\n                <li>Business</li>\n                <li>Sport</li>\n                <li>Culture</li>\n            </ul>\n        </nav>\n    </header>\n\n    <main>\n        <section id=\"main-news\">\n            <h1>Main Headline</h1>\n            <p>Main news summary...</p>\n        </section>\n\n        <section id=\"secondary-news\">\n            <h2>Secondary Headline 1</h2>\n            <p>Summary...</p>\n\n            <h2>Secondary Headline 2</h2>\n            <p>Summary...</p>\n        </section>\n    </main>\n\n    <footer>\n        Copyright 2023, News Website\n    </footer>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    font-family: Arial, sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #f3f3f3;\n}\n\nheader {\n    background-color: #1a1a1a;\n    color: white;\n    padding: 10px 0;\n    text-align: center;\n}\n\n#logo {\n    font-size: 2em;\n}\n\nnav ul {\n    list-style-type: none;\n    padding: 0;\n}\n\nnav ul li {\n    display: inline-block;\n    margin-right: 20px;\n    cursor: pointer;\n}\n\nmain {\n    max-width: 800px;\n    margin: 20px auto;\n    background-color: white;\n    padding: 20px;\n    box-shadow: 0 0 10px rgba(0,0,0,0.1);\n}\n\n#main-news h1 {\n    font-size: 2em;\n}\n\n#secondary-news h2 {\n    font-size: 1.5em;\n}\n\nfooter {\n    background-color: #1a1a1a;\n    color: white;\n    text-align: center;\n    padding: 10px 0;\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n}\n```\n"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "A hangman game"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Hangman Game</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <div class=\"game-container\">\n        <div id=\"word\"></div>\n        <div id=\"letters\"></div>\n        <button onclick=\"startGame()\">Start New Game</button>\n    </div>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    font-family: Arial, sans-serif;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #f3f3f3;\n}\n\n.game-container {\n    background: #fff;\n    padding: 30px;\n    border-radius: 5px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    text-align: center;\n}\n\n#word {\n    font-size: 2em;\n    margin-bottom: 20px;\n}\n\n#letters button {\n    margin: 5px;\n}\n```\n\n[script.js]\n```javascript\nlet wordList = ['programming', 'hangman', 'javascript', 'developer'];\nlet selectedWord = '';\nlet displayWord = '';\nlet attempts = 6;\n\nfunction startGame() {\n    selectedWord = wordList[Math.floor(Math.random() * wordList.length)];\n    displayWord = '_'.repeat(selectedWord.length);\n    document.getElementById('word').innerText = displayWord;\n    renderLetters();\n}\n\nfunction renderLetters() {\n    let letterContainer = document.getElementById('letters');\n    letterContainer.innerHTML = '';\n    for (let i = 97; i <= 122; i++) {\n        let letter = String.fromCharCode(i);\n        let btn = document.createElement('button');\n        btn.innerText = letter;\n        btn.onclick = function() { makeGuess(letter); };\n        letterContainer.appendChild(btn);\n    }\n}\n\nfunction makeGuess(letter) {\n    let wordArray = selectedWord.split('');\n    let displayArray = displayWord.split('');\n    if (selectedWord.includes(letter)) {\n        wordArray.forEach((char, index) => {\n            if (char === letter) {\n                displayArray[index] = letter;\n            }\n        });\n        displayWord = displayArray.join('');\n    } else {\n        attempts--;\n        if (attempts === 0) {\n            alert('You lost! The word was: ' + selectedWord);\n            startGame();\n            return;\n        }\n    }\n    if (!displayWord.includes('_')) {\n        alert('You won!');\n        startGame();\n        return;\n    }\n    document.getElementById('word').innerText = displayWord;\n}\n\nstartGame();\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "HTML5 calculator"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>HTML5 Calculator</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <div class=\"calculator\">\n        <input type=\"text\" id=\"display\" disabled>\n        <div class=\"buttons\">\n            <button onclick=\"clearDisplay()\">C</button>\n            <button onclick=\"appendToDisplay('/')\">/</button>\n            <button onclick=\"appendToDisplay('*')\">*</button>\n            <button onclick=\"appendToDisplay('7')\">7</button>\n            <button onclick=\"appendToDisplay('8')\">8</button>\n            <button onclick=\"appendToDisplay('9')\">9</button>\n            <button onclick=\"appendToDisplay('-')\">-</button>\n            <button onclick=\"appendToDisplay('4')\">4</button>\n            <button onclick=\"appendToDisplay('5')\">5</button>\n            <button onclick=\"appendToDisplay('6')\">6</button>\n            <button onclick=\"appendToDisplay('+')\">+</button>\n            <button onclick=\"appendToDisplay('1')\">1</button>\n            <button onclick=\"appendToDisplay('2')\">2</button>\n            <button onclick=\"appendToDisplay('3')\">3</button>\n            <button onclick=\"calculate()\">=</button>\n            <button onclick=\"appendToDisplay('0')\">0</button>\n            <button onclick=\"appendToDisplay('.')\">.</button>\n        </div>\n    </div>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    font-family: Arial, sans-serif;\n    background-color: #f3f4f6;\n}\n\n.calculator {\n    border: 1px solid #d3d4d5;\n    padding: 20px;\n    border-radius: 5px;\n    box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);\n}\n\n#display {\n    width: 100%;\n    padding: 10px;\n    font-size: 20px;\n    margin-bottom: 10px;\n    border-radius: 5px;\n    border: 1px solid #d3d4d5;\n}\n\n.buttons {\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    gap: 10px;\n}\n\nbutton {\n    padding: 20px;\n    font-size: 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\nbutton:hover {\n    background-color: #e9e9e9;\n}\n```\n\nFinally, let's add the functionality with JavaScript.\n\n[script.js]\n```javascript\nconst display = document.getElementById('display');\n\nfunction appendToDisplay(value) {\n    display.value += value;\n}\n\nfunction clearDisplay() {\n    display.value = '';\n}\n\nfunction calculate() {\n    try {\n        display.value = eval(display.value);\n    } catch (e) {\n        display.value = 'Error';\n    }\n}\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "A pong game"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Pong Game</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <canvas id=\"pongCanvas\" width=\"800\" height=\"400\"></canvas>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #000;\n}\n\ncanvas {\n    border: 1px solid white;\n}\n```\n\n[script.js]\n```javascript\nconst canvas = document.getElementById(\"pongCanvas\");\nconst ctx = canvas.getContext(\"2d\");\n\nconst ball = {\n    x: canvas.width / 2,\n    y: canvas.height / 2,\n    radius: 10,\n    speed: 4,\n    dx: 4,\n    dy: 4\n};\n\nconst paddle = {\n    width: 10,\n    height: 60,\n    x: 0,\n    y: canvas.height / 2 - 30,\n    dy: 4\n};\n\nfunction drawBall() {\n    ctx.fillStyle = \"#FFF\";\n    ctx.beginPath();\n    ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n}\n\nfunction drawPaddle(x, y) {\n    ctx.fillStyle = \"#FFF\";\n    ctx.fillRect(x, y, paddle.width, paddle.height);\n}\n\nfunction update() {\n    ball.x += ball.dx;\n    ball.y += ball.dy;\n\n    if (ball.y + ball.radius > canvas.height || ball.y - ball.radius < 0) {\n        ball.dy *= -1;\n    }\n\n    if (ball.x - ball.radius < paddle.width && ball.y + ball.radius > paddle.y && ball.y - ball.radius < paddle.y + paddle.height || ball.x + ball.radius > canvas.width - paddle.width && ball.y + ball.radius > paddle.y && ball.y - ball.radius < paddle.y + paddle.height) {\n        ball.dx *= -1;\n    }\n\n    if (ball.x + ball.radius > canvas.width) {\n        ball.x = canvas.width / 2;\n        ball.y = canvas.height / 2;\n        ball.dx *= -1;\n    } else if (ball.x - ball.radius < 0) {\n        ball.x = canvas.width / 2;\n        ball.y = canvas.height / 2;\n        ball.dx *= -1;\n    }\n}\n\nfunction render() {\n    ctx.fillStyle = \"#000\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    drawBall();\n    drawPaddle(0, paddle.y);\n    drawPaddle(canvas.width - paddle.width, paddle.y);\n}\n\nfunction gameLoop() {\n    update();\n    render();\n    requestAnimationFrame(gameLoop);\n}\n\ngameLoop();\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "A flappy bird game"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Flappy Bird Game</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <canvas id=\"flappyBirdCanvas\" width=\"480\" height=\"640\"></canvas>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #4ec0ca;\n}\n\ncanvas {\n    border: 1px solid black;\n    background-color: #4ec0ca;\n}\n```\n\n[script.js]\n```javascript\nconst canvas = document.getElementById(\"flappyBirdCanvas\");\nconst ctx = canvas.getContext(\"2d\");\n\nlet bird = {\n    x: canvas.width / 4,\n    y: canvas.height / 2,\n    radius: 15,\n    gravity: 0.5,\n    velocity: 0,\n    jump: -8\n};\n\nlet pipes = [];\npipes[0] = {\n    x: canvas.width,\n    y: 0,\n    width: 80,\n    gap: 200\n};\n\nlet score = 0;\n\ncanvas.addEventListener('click', function() {\n    bird.velocity = bird.jump;\n});\n\nfunction drawBird() {\n    ctx.fillStyle = \"yellow\";\n    ctx.beginPath();\n    ctx.arc(bird.x, bird.y, bird.radius, 0, Math.PI * 2);\n    ctx.closePath();\n    ctx.fill();\n}\n\nfunction drawPipe(pipeX, pipeY, pipeWidth, pipeHeight) {\n    ctx.fillStyle = \"green\";\n    ctx.fillRect(pipeX, pipeY, pipeWidth, pipeHeight);\n}\n\nfunction updateGame() {\n    bird.velocity += bird.gravity;\n    bird.y += bird.velocity;\n    \n    for (let i = 0; i < pipes.length; i++) {\n        pipes[i].x -= 2;\n\n        if (pipes[i].x == canvas.width / 2) {\n            pipes.push({\n                x: canvas.width,\n                y: Math.floor(Math.random() * canvas.height / 2),\n                width: 80,\n                gap: 200\n            });\n        }\n\n        if (bird.x + bird.radius > pipes[i].x && bird.x - bird.radius < pipes[i].x + pipes[i].width && (bird.y - bird.radius < pipes[i].y + canvas.height / 2 || bird.y + bird.radius > pipes[i].y + canvas.height / 2 + pipes[i].gap) || bird.y + bird.radius > canvas.height) {\n            bird.y = canvas.height / 2;\n            bird.velocity = 0;\n            score = 0;\n            pipes = [];\n            pipes[0] = {\n                x: canvas.width,\n                y: 0,\n                width: 80,\n                gap: 200\n            };\n        }\n\n        if (pipes[i].x + pipes[i].width == bird.x) {\n            score++;\n        }\n\n        drawPipe(pipes[i].x, 0, pipes[i].width, pipes[i].y + canvas.height / 2);\n        drawPipe(pipes[i].x, pipes[i].y + canvas.height / 2 + pipes[i].gap, pipes[i].width, canvas.height);\n    }\n\n    ctx.fillStyle = \"white\";\n    ctx.font = \"30px Arial\";\n    ctx.fillText(\"Score: \" + score, 20, canvas.height - 20);\n    \n    drawBird();\n}\n\nfunction gameLoop() {\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    updateGame();\n    requestAnimationFrame(gameLoop);\n}\n\ngameLoop();\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "A tetris game"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Tetris Game</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <canvas id=\"tetris\" width=\"300\" height=\"600\"></canvas>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #f3f3f3;\n}\n\ncanvas {\n    border: 1px solid #000;\n}\n```\n\n[script.js]\n```javascript\nconst canvas = document.getElementById('tetris');\nconst context = canvas.getContext('2d');\ncontext.scale(20, 20);\n\nfunction createMatrix(w, h) {\n    const matrix = [];\n    while (h--) {\n        matrix.push(new Array(w).fill(0));\n    }\n    return matrix;\n}\n\nfunction draw() {\n    context.fillStyle = '#000';\n    context.fillRect(0, 0, canvas.width, canvas.height);\n\n    drawMatrix(player.matrix, player.pos);\n}\n\nfunction drawMatrix(matrix, offset) {\n    matrix.forEach((row, y) => {\n        row.forEach((value, x) => {\n            if (value !== 0) {\n                context.fillStyle = 'red';\n                context.fillRect(x + offset.x, y + offset.y, 1, 1);\n            }\n        });\n    });\n}\n\nfunction update() {\n    draw();\n    requestAnimationFrame(update);\n}\n\nconst arena = createMatrix(10, 20);\nconst player = {\n    pos: {x: 5, y: 5},\n    matrix: [\n        [1, 1, 1, 1],\n    ],\n};\n\nupdate();\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "A snake game"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Snake Game</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <canvas id=\"gameCanvas\" width=\"400\" height=\"400\"></canvas>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #f4f4f4;\n}\n\ncanvas {\n    border: 2px solid black;\n}\n```\n\n[script.js]\n```javascript\nconst canvas = document.getElementById('gameCanvas');\nconst context = canvas.getContext('2d');\nconst boxSize = 20;\nconst canvasSize = canvas.width;\nconst numBoxes = canvasSize / boxSize;\nlet snake = [];\nlet food = {};\nlet direction = { x: 1, y: 0 };\nlet newDirection = { x: 1, y: 0 };\nlet gameOver = false;\n\nsnake[0] = { x: 5, y: 5 };\n\ndocument.addEventListener(\"keydown\", changeDirection);\n\nfunction changeDirection(event) {\n    switch(event.keyCode) {\n        case 37:\n            newDirection = { x: -1, y: 0 };\n            break;\n        case 38:\n            newDirection = { x: 0, y: -1 };\n            break;\n        case 39:\n            newDirection = { x: 1, y: 0 };\n            break;\n        case 40:\n            newDirection = { x: 0, y: 1 };\n            break;\n    }\n}\n\nfunction spawnFood() {\n    food = {\n        x: Math.floor(Math.random() * numBoxes),\n        y: Math.floor(Math.random() * numBoxes)\n    };\n}\n\nfunction drawGame() {\n    context.clearRect(0, 0, canvasSize, canvasSize);\n\n    for(let i = 0; i < snake.length; i++) {\n        context.fillStyle = (i === 0) ? 'green' : 'white';\n        context.fillRect(snake[i].x * boxSize, snake[i].y * boxSize, boxSize, boxSize);\n        context.strokeStyle = 'black';\n        context.strokeRect(snake[i].x * boxSize, snake[i].y * boxSize, boxSize, boxSize);\n    }\n\n    context.fillStyle = 'red';\n    context.fillRect(food.x * boxSize, food.y * boxSize, boxSize, boxSize);\n\n    let snakeHeadX = snake[0].x + newDirection.x;\n    let snakeHeadY = snake[0].y + newDirection.y;\n\n    if(snakeHeadX == food.x && snakeHeadY == food.y) {\n        spawnFood();\n    } else {\n        snake.pop();\n    }\n\n    let newHead = {\n        x: snakeHeadX,\n        y: snakeHeadY\n    };\n\n    snake.unshift(newHead);\n\n    for(let i = 1; i < snake.length; i++) {\n        if(snake[i].x === snake[0].x && snake[i].y === snake[0].y) {\n            gameOver = true;\n            break;\n        }\n    }\n\n    if(snakeHeadX < 0 || snakeHeadY < 0 || snakeHeadX >= numBoxes || snakeHeadY >= numBoxes) {\n        gameOver = true;\n    }\n\n    direction = newDirection;\n\n    if(gameOver) {\n        context.fillStyle = 'black';\n        context.font = '30px Arial';\n        context.fillText('Game Over', canvasSize / 2 - 75, canvasSize / 2);\n        return;\n    }\n\n    setTimeout(drawGame, 100);\n}\n\nspawnFood();\ndrawGame();\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "A music shop page"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Music Shop</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <header>\n        <h1>Music Shop</h1>\n    </header>\n    <main>\n        <ul id=\"products\"></ul>\n    </main>\n    <footer>\n        <p>Music Shop &copy; 2023</p>\n    </footer>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    margin: 0;\n    padding: 0;\n}\n\nheader {\n    background-color: #333;\n    color: #fff;\n    text-align: center;\n    padding: 10px 0;\n}\n\nmain {\n    width: 80%;\n    margin: 20px auto;\n    background: #fff;\n    padding: 20px;\n    box-shadow: 2px 2px 15px rgba(0, 0, 0, 0.1);\n}\n\nul {\n    list-style: none;\n    padding: 0;\n}\n\nli {\n    border: 1px solid #ddd;\n    margin: 10px 0;\n    padding: 10px;\n    display: flex;\n    justify-content: space-between;\n}\n\nfooter {\n    background-color: #333;\n    color: #fff;\n    text-align: center;\n    padding: 10px 0;\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n}\n```\n\n[script.js]\n```javascript\ndocument.addEventListener('DOMContentLoaded', function() {\n    let products = [\n        { name: 'Guitar', price: 500 },\n        { name: 'Drums', price: 700 },\n        { name: 'Piano', price: 1500 },\n        { name: 'Flute', price: 200 },\n        { name: 'Microphone', price: 150 }\n    ];\n\n    let productsContainer = document.getElementById('products');\n    \n    products.forEach(product => {\n        let li = document.createElement('li');\n        li.innerHTML = `<span>${product.name}</span> <span>$${product.price}</span>`;\n        productsContainer.appendChild(li);\n    });\n});\n```"}]}
{"messages": [{"role": "system", "content": "You are a developer for a company"}, {"role": "user", "content": "A photo gallery template"}, {"role": "assistant", "content":"[index.html]\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Photo Gallery</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <header>\n        <h1>Photo Gallery</h1>\n    </header>\n    <main>\n        <div id=\"gallery\"></div>\n    </main>\n    <footer>\n        <p>Photo Gallery &copy; 2023</p>\n    </footer>\n    <script src=\"script.js\"></script>\n</body>\n</html>\n```\n\n[styles.css]\n```css\nbody {\n    font-family: Arial, sans-serif;\n    background-color: #f4f4f4;\n    margin: 0;\n    padding: 0;\n}\n\nheader {\n    background-color: #333;\n    color: #fff;\n    text-align: center;\n    padding: 10px 0;\n}\n\nmain {\n    width: 80%;\n    margin: 20px auto;\n    background: #fff;\n    padding: 20px;\n    box-shadow: 2px 2px 15px rgba(0, 0, 0, 0.1);\n}\n\n#gallery {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    gap: 15px;\n}\n\n#gallery img {\n    width: 100%;\n    border-radius: 8px;\n    box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);\n}\n\nfooter {\n    background-color: #333;\n    color: #fff;\n    text-align: center;\n    padding: 10px 0;\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n}\n```\n\n[script.js]\n```javascript\ndocument.addEventListener('DOMContentLoaded', function() {\n    let photos = [\n        'photo1.jpg',\n        'photo2.jpg',\n        'photo3.jpg',\n        'photo4.jpg',\n        'photo5.jpg',\n        'photo6.jpg'\n    ];\n\n    let galleryContainer = document.getElementById('gallery');\n    \n    photos.forEach(photo => {\n        let img = document.createElement('img');\n        img.src = photo;\n        galleryContainer.appendChild(img);\n    });\n});\n```"}]}
